// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: spvault.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Strategy int32

const (
	Strategy_addin Strategy = 0
	Strategy_adfs  Strategy = 1
	Strategy_fba   Strategy = 2
	Strategy_saml  Strategy = 3
	Strategy_tmg   Strategy = 4
)

// Enum value maps for Strategy.
var (
	Strategy_name = map[int32]string{
		0: "addin",
		1: "adfs",
		2: "fba",
		3: "saml",
		4: "tmg",
	}
	Strategy_value = map[string]int32{
		"addin": 0,
		"adfs":  1,
		"fba":   2,
		"saml":  3,
		"tmg":   4,
	}
)

func (x Strategy) Enum() *Strategy {
	p := new(Strategy)
	*p = x
	return p
}

func (x Strategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Strategy) Descriptor() protoreflect.EnumDescriptor {
	return file_spvault_proto_enumTypes[0].Descriptor()
}

func (Strategy) Type() protoreflect.EnumType {
	return &file_spvault_proto_enumTypes[0]
}

func (x Strategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Strategy.Descriptor instead.
func (Strategy) EnumDescriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{0}
}

type TokenType int32

const (
	TokenType_Bearer TokenType = 0
	TokenType_Cookie TokenType = 1
	TokenType_Custom TokenType = 3
)

// Enum value maps for TokenType.
var (
	TokenType_name = map[int32]string{
		0: "Bearer",
		1: "Cookie",
		3: "Custom",
	}
	TokenType_value = map[string]int32{
		"Bearer": 0,
		"Cookie": 1,
		"Custom": 3,
	}
)

func (x TokenType) Enum() *TokenType {
	p := new(TokenType)
	*p = x
	return p
}

func (x TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_spvault_proto_enumTypes[1].Descriptor()
}

func (TokenType) Type() protoreflect.EnumType {
	return &file_spvault_proto_enumTypes[1]
}

func (x TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenType.Descriptor instead.
func (TokenType) EnumDescriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{1}
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteUrl     string   `protobuf:"bytes,1,opt,name=site_url,json=siteUrl,proto3" json:"site_url,omitempty"`
	Strategy    Strategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=spvault.Strategy" json:"strategy,omitempty"`
	Credentials string   `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spvault_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spvault_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *AuthRequest) GetStrategy() Strategy {
	if x != nil {
		return x.Strategy
	}
	return Strategy_addin
}

func (x *AuthRequest) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

type AuthReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string    `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TokenType  TokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=spvault.TokenType" json:"token_type,omitempty"`
	Expiration int64     `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *AuthReply) Reset() {
	*x = AuthReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spvault_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthReply) ProtoMessage() {}

func (x *AuthReply) ProtoReflect() protoreflect.Message {
	mi := &file_spvault_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthReply.ProtoReflect.Descriptor instead.
func (*AuthReply) Descriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{1}
}

func (x *AuthReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthReply) GetTokenType() TokenType {
	if x != nil {
		return x.TokenType
	}
	return TokenType_Bearer
}

func (x *AuthReply) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type RegRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteUrl     string   `protobuf:"bytes,1,opt,name=site_url,json=siteUrl,proto3" json:"site_url,omitempty"`
	Strategy    Strategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=spvault.Strategy" json:"strategy,omitempty"`
	Credentials string   `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *RegRequest) Reset() {
	*x = RegRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spvault_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegRequest) ProtoMessage() {}

func (x *RegRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spvault_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegRequest.ProtoReflect.Descriptor instead.
func (*RegRequest) Descriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{2}
}

func (x *RegRequest) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *RegRequest) GetStrategy() Strategy {
	if x != nil {
		return x.Strategy
	}
	return Strategy_addin
}

func (x *RegRequest) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

type RegReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RegReply) Reset() {
	*x = RegReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spvault_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegReply) ProtoMessage() {}

func (x *RegReply) ProtoReflect() protoreflect.Message {
	mi := &file_spvault_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegReply.ProtoReflect.Descriptor instead.
func (*RegReply) Descriptor() ([]byte, []int) {
	return file_spvault_proto_rawDescGZIP(), []int{3}
}

func (x *RegReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_spvault_proto protoreflect.FileDescriptor

var file_spvault_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x74, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x0a, 0x52, 0x65, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x3b, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x61, 0x64, 0x66, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x66, 0x62, 0x61, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x73, 0x61, 0x6d, 0x6c, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x74, 0x6d, 0x67,
	0x10, 0x04, 0x2a, 0x2f, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x10, 0x03, 0x32, 0x4b, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x70, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x32, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x34, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x73, 0x70,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x73, 0x70, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spvault_proto_rawDescOnce sync.Once
	file_spvault_proto_rawDescData = file_spvault_proto_rawDesc
)

func file_spvault_proto_rawDescGZIP() []byte {
	file_spvault_proto_rawDescOnce.Do(func() {
		file_spvault_proto_rawDescData = protoimpl.X.CompressGZIP(file_spvault_proto_rawDescData)
	})
	return file_spvault_proto_rawDescData
}

var file_spvault_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spvault_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_spvault_proto_goTypes = []interface{}{
	(Strategy)(0),       // 0: spvault.Strategy
	(TokenType)(0),      // 1: spvault.TokenType
	(*AuthRequest)(nil), // 2: spvault.AuthRequest
	(*AuthReply)(nil),   // 3: spvault.AuthReply
	(*RegRequest)(nil),  // 4: spvault.RegRequest
	(*RegReply)(nil),    // 5: spvault.RegReply
}
var file_spvault_proto_depIdxs = []int32{
	0, // 0: spvault.AuthRequest.strategy:type_name -> spvault.Strategy
	1, // 1: spvault.AuthReply.token_type:type_name -> spvault.TokenType
	0, // 2: spvault.RegRequest.strategy:type_name -> spvault.Strategy
	2, // 3: spvault.Authenticator.Authenticate:input_type -> spvault.AuthRequest
	4, // 4: spvault.Registrator.Register:input_type -> spvault.RegRequest
	3, // 5: spvault.Authenticator.Authenticate:output_type -> spvault.AuthReply
	5, // 6: spvault.Registrator.Register:output_type -> spvault.RegReply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_spvault_proto_init() }
func file_spvault_proto_init() {
	if File_spvault_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spvault_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spvault_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spvault_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spvault_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spvault_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_spvault_proto_goTypes,
		DependencyIndexes: file_spvault_proto_depIdxs,
		EnumInfos:         file_spvault_proto_enumTypes,
		MessageInfos:      file_spvault_proto_msgTypes,
	}.Build()
	File_spvault_proto = out.File
	file_spvault_proto_rawDesc = nil
	file_spvault_proto_goTypes = nil
	file_spvault_proto_depIdxs = nil
}
